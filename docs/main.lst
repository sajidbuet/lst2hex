


ARM Macro Assembler    Page 1 


    1 00000000         ; memfile.dat
    2 00000000         ; david_harris@hmc.edu and sarah_harris@hmc.edu 20 Decem
                       ber 2013
    3 00000000         ; Modified B. A. Bryce bbryce@hmc.edu April 2015
    4 00000000         ; Test ARM processor
    5 00000000         ; ADD, SUB, AND, ORR, LDR, STR, B
    6 00000000         ; If successful, it should write the value 7 to address 
                       248
    7 00000000                 AREA             MYCODE, CODE, READONLY
    8 00000000         ;               binary of instruction      hex   PC
    9 00000000         MAIN
   10 00000000 E04F000F        SUB              R0, R15, R15 ; R0 = 0      1110
                                                             000 0010 0 1111 00
                                                            00 0000 0000 1111 E
                                                            04F000F 0x00
   11 00000004 E2802005        ADD              R2, R0, #5  ; R2 = 5       1110
                                                             001 0100 0 0000 00
                                                            10 0000 0000 0101 E
                                                            2802005 0x04
   12 00000008 E280300C        ADD              R3, R0, #12 ; R3 = 12        11
                                                            10 001 0100 0 0000 
                                                            0011 0000 0000 1100
                                                             E280300C 0x08
   13 0000000C E2437009        SUB              R7, R3, #9  ; R7 = 3         11
                                                            10 001 0010 0 0011 
                                                            0111 0000 0000 1001
                                                             E2437009 0x0c
   14 00000010 E1874002        ORR              R4, R7, R2  ; R4 = 3 OR 5 = 7  
                                                                         1110 0
                                                            00 1100 0 0111 0100
                                                             0000 0000 0010 E18
                                                            74002 0x10
   15 00000014 E0035004        AND              R5, R3, R4  ; R5 = 12 AND 7 = 4
                                                                         1110 0
                                                            00 0000 0 0011 0101
                                                             0000 0000 0100 E00
                                                            35004 0x14
   16 00000018 E0855004        ADD              R5, R5, R4  ; R5 = 4 + 7 = 11  
                                                                         1110 0
                                                            00 0100 0 0101 0101
                                                             0000 0000 0100 E08
                                                            55004 0x18
   17 0000001C E255500A        SUBS             R5, R5, #10 ; R5 = 11 - 10 = 1,
                                                             set flags 1110 001
                                                             0010 1 0101 0101 0
                                                            000 0000 1010 E2555
                                                            00A 0x1c
   18 00000020 C2555002        SUBSGT           R5, R5, #2  ; R5 = 1 - 2 = -1, 
                                                            set flags 1100 001 
                                                            0010 1 0101 0101 00
                                                            00 0000 0010 C25550
                                                            02 0x20
   19 00000024 E285500C        ADD              R5, R5, #12 ; R5 = -1 + 12 = 11
                                                                1110 001 0100 0
                                                             0101 0101 0000 000
                                                            0 1100 E285500C 0x2
                                                            4 
   20 00000028 E0558007        SUBS             R8, R5, R7  ; R8 = 11 - 3 = 8, 
                                                            set Flags    1110 0



ARM Macro Assembler    Page 2 


                                                            00 0010 1 0101 1000
                                                             0000 0000 0111 E05
                                                            58007 0x28
   21 0000002C 0A00000C        BEQ              END         ; shouldn't be take
                                                            n            0000 1
                                                            010 0000  0000 0000
                                                             0000 0000 1100 0A0
                                                            0000C 0x2c
   22 00000030 E0538004        SUBS             R8, R3, R4  ; R8 = 12 - 7  = 5 
                                                                         1110 0
                                                            00 0010 1 0011 1000
                                                             0000 0000 0100 E05
                                                            38004 0x30
   23 00000034 AA000000        BGE              AROUND      ; should be taken  
                                                                         1010 1
                                                            010 0000  0000 0000
                                                             0000 0000 0000 AA0
                                                            00000 0x34
   24 00000038 E2805000        ADD              R5, R0, #0  ; should be skipped
                                                                         1110 0
                                                            01 0100 0 0000 0101
                                                             0000 0000 0000 E28
                                                            05000 0x38
   25 0000003C         AROUND
   26 0000003C E0578002        SUBS             R8, R7, R2  ; R8 = 3 - 5 = -2, 
                                                            set Flags    1110 0
                                                            00 0010 1 0111 1000
                                                             0000 0000 0010 E05
                                                            78002 0x3c
   27 00000040 B2857001        ADDLT            R7, R5, #1  ; R7 = 11 + 1 = 12 
                                                               1011 001 0100 0 
                                                            0101 0111 0000 0000
                                                             0001 B2857001 0x40
                                                            
   28 00000044 E0477002        SUB              R7, R7, R2  ; R7 = 12 - 5 = 7  
                                                              1110 000 0010 0 0
                                                            111 0111 0000 0000 
                                                            0010 E0477002 0x44
   29 00000048 E58370E0        STR              R7, [R3, #224] ; mem[12+224] = 
                                                            7    1110 010 1100 
                                                            0 0011 0111 0000 01
                                                            01 0100 E58370E0 0x
                                                            48
   30 0000004C E59020EC        LDR              R2, [R0, #236] ; R2 = mem[236] 
                                                            = 7    1110 010 110
                                                            0 1 0000 0010 0000 
                                                            0110 0000 E59020EC 
                                                            0x4c
   31 00000050 E08FF000        ADD              R15, R15, R0 ; PC <- PC + 8 (sk
                                                            ips next)     1110 
                                                            000 0100 0 1111 111
                                                            1 0000 0000 0000 E0
                                                            8FF000 0x50
   32 00000054 E280200E        ADD              R2, R0, #14 ; shouldn't happen 
                                                                         1110 0
                                                            01 0100 0 0000 0010
                                                             0000 0000 0001 E28
                                                            0200E 0x54
   33 00000058 EA000001        B                END         ; always taken     



ARM Macro Assembler    Page 3 


                                                            1110 1010 0000  000
                                                            0 0000 0000 0000 00
                                                            01 EA000001 0x58
   34 0000005C E280200D        ADD              R2, R0, #13 ; shouldn't happen 
                                                               1110 001 0100 0 
                                                            0000 0010 0000 0000
                                                             0001 E280200D 0x5c
                                                            
   35 00000060 E280200A        ADD              R2, R0, #10 ; shouldn't happen 
                                                               1110 001 0100 0 
                                                            0000 0010 0000 0000
                                                             0001 E280200A 0x60
                                                            
   36 00000064         END
   37 00000064 E58020F8        STR              R2, [R0, #248] ; mem[248] = 7  
                                                                            111
                                                            0 010 1100 0 0000 0
                                                            010 0000 1111 1000 
                                                            E58020F8 0x64
   38 00000068         
                       
Command Line: --debug --xref --apcs=interwork --depend=.\main.d -o.\main.o -IC:
\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --li
st=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AROUND 0000003C

Symbol: AROUND
   Definitions
      At line 25 in file main.s
   Uses
      At line 23 in file main.s
Comment: AROUND used once
END 00000064

Symbol: END
   Definitions
      At line 36 in file main.s
   Uses
      At line 21 in file main.s
      At line 33 in file main.s

MAIN 00000000

Symbol: MAIN
   Definitions
      At line 9 in file main.s
   Uses
      None
Comment: MAIN unused
MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: MYCODE unused
4 symbols
335 symbols in table
